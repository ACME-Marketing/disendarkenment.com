---
import BaseLayout from '../layouts/BaseLayout.astro';

// Since we can't use SSR, we'll handle URL params on the client side
const formData = {
  name: '',
  email: '',
  phone: '',
  inquiry_type: '',
  message: ''
};
---

<BaseLayout 
  title="Schedule Your Consultation - Disendarkenment" 
  description="Schedule your confidential consultation for psychedelic therapy services. Choose a convenient time for your 30-minute call."
>
  <section class="py-16 bg-gradient-to-br from-purple-50 to-indigo-50 min-h-screen">
    <div class="container mx-auto px-4 max-w-4xl">
      <!-- Confirmation Message -->
      <div class="text-center mb-8">
        <div class="bg-green-100 border border-green-400 text-green-700 px-6 py-4 rounded-lg mb-6 shadow-lg">
          <div class="flex items-center justify-center mb-2">
            <svg class="w-6 h-6 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            <h2 class="text-2xl font-bold">Thank you!</h2>
          </div>
          <p class="text-lg">We've received your consultation request. Now let's find a convenient time to talk.</p>
        </div>
      </div>

      <!-- Contextual Information -->
      <div class="grid md:grid-cols-2 gap-8 mb-8">
        <div class="bg-white rounded-lg shadow-lg p-6">
          <div class="flex items-center mb-4">
            <svg class="w-6 h-6 text-purple-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
            <h3 class="text-xl font-semibold">What to Expect</h3>
          </div>
          <ul class="space-y-3 text-gray-600">
            <li class="flex items-start">
              <span class="text-purple-600 mr-3 mt-1">•</span>
              <span>30-minute confidential consultation call</span>
            </li>
            <li class="flex items-start">
              <span class="text-purple-600 mr-3 mt-1">•</span>
              <span>Discussion of your goals and background</span>
            </li>
            <li class="flex items-start">
              <span class="text-purple-600 mr-3 mt-1">•</span>
              <span>Assessment of service fit and readiness</span>
            </li>
            <li class="flex items-start">
              <span class="text-purple-600 mr-3 mt-1">•</span>
              <span>Answers to your questions about the process</span>
            </li>
            <li class="flex items-start">
              <span class="text-purple-600 mr-3 mt-1">•</span>
              <span>No pressure - just information and connection</span>
            </li>
          </ul>
        </div>

        <div class="bg-white rounded-lg shadow-lg p-6">
          <div class="flex items-center mb-4">
            <svg class="w-6 h-6 text-indigo-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            <h3 class="text-xl font-semibold">Your Information</h3>
          </div>
          <div class="space-y-3 text-sm text-gray-600" id="user-info">
            <p data-field="name" style="display: none;"><strong class="text-gray-900">Name:</strong> <span></span></p>
            <p data-field="email" style="display: none;"><strong class="text-gray-900">Email:</strong> <span></span></p>
            <p data-field="phone" style="display: none;"><strong class="text-gray-900">Phone:</strong> <span></span></p>
            <p data-field="inquiry_type" style="display: none;"><strong class="text-gray-900">Inquiry Type:</strong> <span></span></p>
            <div data-field="message" style="display: none;" class="mt-4">
              <p><strong class="text-gray-900">Your message:</strong></p>
              <p class="italic bg-gray-50 p-3 rounded mt-2 border-l-4 border-purple-200"><span></span></p>
            </div>
          </div>
        </div>
      </div>

      <!-- Cal.com Booking Interface -->
      <div class="bg-white rounded-lg shadow-lg p-8">
        <div class="text-center mb-6">
          <h3 class="text-2xl font-bold text-gray-900 mb-2">Choose Your Consultation Time</h3>
          <p class="text-gray-600">Select a convenient time for your confidential consultation call</p>
        </div>
        
        <!-- Cal.com embed container -->
        <div id="cal-booking-container" class="min-h-[600px] flex items-center justify-center">
          <button 
            data-cal-link="takealook/disendarkenment-journey-readiness-call"
            data-cal-namespace="disendarkenment-journey-readiness-call"
            data-cal-config='{"layout":"month_view"}'
            id="cal-booking-button"
            class="w-full max-w-md bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-500 hover:to-indigo-500 text-white font-semibold py-4 px-8 rounded-lg text-lg transition duration-300 transform hover:scale-105 shadow-lg">
            <div class="flex items-center justify-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              Open Calendar to Schedule
            </div>
          </button>
        </div>

        <div class="mt-6 text-center">
          <p class="text-sm text-gray-500 mb-2">
            Select a time that works for you. You'll receive confirmation details via email.
          </p>
          <div class="flex items-center justify-center text-xs text-gray-400">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
            Secure and confidential scheduling
          </div>
        </div>
      </div>

      <!-- Next Steps -->
      <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h4 class="font-semibold text-blue-900 mb-3 flex items-center">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          What Happens Next
        </h4>
        <div class="text-sm text-blue-800 space-y-2">
          <p>1. <strong>Schedule your consultation</strong> using the calendar above</p>
          <p>2. <strong>Complete our readiness assessment</strong> (optional but recommended)</p>
          <p>3. <strong>Receive confirmation</strong> with call details via email</p>
          <p>4. <strong>Join the call</strong> at your scheduled time to discuss your journey</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Cal.com Scripts -->
  <script type="text/javascript">
    // Cal.com is already initialized in BaseLayout, just set up the event listeners

    // Get URL parameters on the client side
    const urlParams = new URLSearchParams(window.location.search);
    const clientFormData = {
      name: urlParams.get('name') || '',
      email: urlParams.get('email') || '',
      phone: urlParams.get('phone') || '',
      inquiry_type: urlParams.get('inquiry_type') || '',
      message: urlParams.get('message') || ''
    };

    // Debug: Check what we received vs what was sent
    const debugInfo = sessionStorage.getItem('formDebug');
    if (debugInfo) {
      console.log('Form submission debug info:', JSON.parse(debugInfo));
      console.log('What schedule-consultation received:', clientFormData);
      // Clear the debug info
      sessionStorage.removeItem('formDebug');
    }

    // Update the page content with the form data
    document.addEventListener('DOMContentLoaded', () => {
      // Update name in greeting
      const nameElement = document.querySelector('h2');
      if (nameElement && clientFormData.name) {
        nameElement.innerHTML = `Thank you, ${clientFormData.name}!`;
      }

      // Update the information display
      if (clientFormData.name) {
        const nameField = document.querySelector('[data-field="name"]');
        if (nameField) {
          nameField.style.display = 'block';
          nameField.querySelector('span').textContent = clientFormData.name;
        }
      }

      if (clientFormData.email) {
        const emailField = document.querySelector('[data-field="email"]');
        if (emailField) {
          emailField.style.display = 'block';
          emailField.querySelector('span').textContent = clientFormData.email;
        }
      }

      if (clientFormData.phone) {
        const phoneField = document.querySelector('[data-field="phone"]');
        if (phoneField) {
          phoneField.style.display = 'block';
          phoneField.querySelector('span').textContent = clientFormData.phone;
        }
      }

      if (clientFormData.inquiry_type) {
        const inquiryField = document.querySelector('[data-field="inquiry_type"]');
        if (inquiryField) {
          inquiryField.style.display = 'block';
          const formattedType = clientFormData.inquiry_type.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase());
          inquiryField.querySelector('span').textContent = formattedType;
        }
      }

      if (clientFormData.message) {
        const messageField = document.querySelector('[data-field="message"]');
        if (messageField) {
          messageField.style.display = 'block';
          messageField.querySelector('span').textContent = clientFormData.message;
        }
      }

      // Update Cal.com button with pre-filled data
      const calButton = document.getElementById('cal-booking-button');
      if (calButton) {
        const config = {
          layout: "month_view",
          name: clientFormData.name,
          email: clientFormData.email,
          notes: clientFormData.message,
          guests: [],
          phone: clientFormData.phone
        };
        calButton.setAttribute('data-cal-config', JSON.stringify(config));
      }
    });

    // Prepare form data for storage
    const consultationFormData = {
      name: clientFormData.name || '',
      email: clientFormData.email || '',
      phone: clientFormData.phone || '',
      inquiry_type: clientFormData.inquiry_type || '',
      message: clientFormData.message || '',
      consultation_booked: false,
      booking_reference: null
    };

    // Listen for booking completion
    Cal.ns["disendarkenment-journey-readiness-call"]("on", {
      action: "bookingSuccessful",
      callback: (e) => {
        console.log('Booking successful:', e.detail);
        
        // Update form data with booking info
        consultationFormData.consultation_booked = true;
        consultationFormData.booking_reference = e.detail?.bookingReference || 'confirmed';
        
        // Store in sessionStorage for readiness assessment
        sessionStorage.setItem('consultationData', JSON.stringify(consultationFormData));
        
        // Show success message briefly
        const container = document.getElementById('cal-booking-container');
        if (container) {
          container.innerHTML = `
            <div class="text-center py-8">
              <div class="bg-green-100 border border-green-400 text-green-700 px-6 py-4 rounded-lg mb-4">
                <h4 class="font-bold mb-2">✓ Consultation Scheduled!</h4>
                <p>Redirecting you to prepare for our conversation...</p>
              </div>
            </div>
          `;
        }
        
        // Redirect to readiness assessment after brief delay
        setTimeout(() => {
          window.location.href = '/readiness-assessment?from=consultation&booked=true';
        }, 2000);
      }
    });

    // Handle booking errors
    Cal.ns["disendarkenment-journey-readiness-call"]("on", {
      action: "bookingFailed",
      callback: (e) => {
        console.error('Booking failed:', e);
        
        const container = document.getElementById('cal-booking-container');
        if (container) {
          container.innerHTML = `
            <div class="text-center py-8">
              <div class="bg-red-100 border border-red-400 text-red-700 px-6 py-4 rounded-lg">
                <h4 class="font-bold mb-2">Booking Error</h4>
                <p>Something went wrong. Please try again or contact us directly.</p>
                <button onclick="location.reload()" class="mt-3 bg-red-600 text-white px-4 py-2 rounded hover:bg-red-500">
                  Try Again
                </button>
              </div>
            </div>
          `;
        }
      }
    });
  </script>
</BaseLayout>